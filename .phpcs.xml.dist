<?xml version="1.0"?>
<ruleset name="plugins">
	<description>Apply WordPress Coding Standards to all files</description>

	<!-- Only scan PHP files. -->
	<arg name="extensions" value="php"/>

	<!-- Whenever possible, cache the scan results and re-use those for unchanged files on the next scan. -->
	<arg name="cache"/>

	<!-- Set the memory limit to 256M.
		 For most standard PHP configurations, this means the memory limit will temporarily be raised.
		 Ref: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Advanced-Usage#specifying-phpini-settings
	-->
	<ini name="memory_limit" value="256M"/>

	<!-- Strip the filepaths down to the relevant bit. -->
	<arg name="basepath" value="./"/>

	<!-- Check up to 20 files simultaneously. -->
	<arg name="parallel" value="20"/>

	<!-- Show sniff codes in all reports. -->
	<arg value="sp"/>

	<arg name="colors"/>

	<!-- Rules: Check PHP version compatibility -->
	<!-- https://github.com/PHPCompatibility/PHPCompatibility#sniffing-your-code-for-compatibility-with-specific-php-versions -->
	<config name="testVersion" value="7.4-"/>
	<rule ref="PHPCompatibilityWP">
		<include-pattern>*\.php</include-pattern>
	</rule>
	<config name="minimum_wp_version" value="6.4"/>

	<config name="text_domain" value="smart-custom-fields"/>

	<rule ref="WordPress"/>
	<rule ref="WordPress.NamingConventions.PrefixAllGlobals">
		<properties>
			<!-- Value: replace the function, class, and variable prefixes used. Separate multiple prefixes with a comma. -->
			<property name="prefixes" type="array" value="usmart-custom-fields"/>
		</properties>
	</rule>
	<rule ref="WordPress.WP.I18n">
		<properties>
			<!-- Value: replace the text domain used. -->
			<property name="text_domain" type="array" value="smart-custom-fields"/>
		</properties>
	</rule>
	<rule ref="WordPress.WhiteSpace.ControlStructureSpacing">
		<properties>
			<property name="blank_line_check" value="true"/>
		</properties>
	</rule>

	<rule ref="WordPress.DB.SlowDBQuery.slow_db_query_tax_query">
		<exclude-pattern>*</exclude-pattern>
	</rule>
	<rule ref="WordPress.Files.FileName">
		<exclude-pattern>*</exclude-pattern>
	</rule>
	<rule ref="WordPress.NamingConventions.PrefixAllGlobals">
		<exclude-pattern>*</exclude-pattern>
	</rule>
	<rule ref="WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase">
		<exclude-pattern>*</exclude-pattern>
	</rule>
	<rule ref="WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase">
		<exclude-pattern>*</exclude-pattern>
	</rule>
	<rule ref="WordPress.NamingConventions.ValidVariableName.PropertyNotSnakeCase">
		<exclude-pattern>*</exclude-pattern>
	</rule>
	<rule ref="WordPress.NamingConventions.ValidHookName.UseUnderscores">
		<exclude-pattern>*</exclude-pattern>
	</rule>
	<rule ref="Generic.Commenting.DocComment.MissingShort">
		<exclude-pattern>*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.ClassComment">
		<exclude-pattern>*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.FileComment.WrongStyle">
		<exclude-pattern>*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.FileComment.Missing">
		<exclude-pattern>*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.FileComment.MissingPackageTag">
		<exclude-pattern>*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.FileComment.SpacingAfterComment">
		<exclude-pattern>*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.InlineComment.InvalidEndChar">
		<exclude-pattern>*</exclude-pattern>
	</rule>
	<rule ref="PSR2.Methods.MethodDeclaration.Underscore">
		<exclude-pattern>*</exclude-pattern>
	</rule>


	<!-- What to scan -->
	<file>.</file>
	<exclude-pattern>/vendor/*</exclude-pattern>
	<exclude-pattern>/node_modules/*</exclude-pattern>
	<exclude-pattern>/.export/*</exclude-pattern>
	<exclude-pattern>/bin/*</exclude-pattern>
	<exclude-pattern>/dist/*</exclude-pattern>
	<exclude-pattern>/languages/*</exclude-pattern>
</ruleset>
